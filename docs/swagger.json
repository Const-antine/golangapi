{
    "swagger": "2.0",
    "info": {
        "description": "Swagger API for Golang API first project.",
        "title": "Golang API project",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Constantine Bond",
            "email": "kostia.bond4444@gmail.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "1.0"
    },
    "basePath": "/v1",
    "paths": {
        "/users": {
            "get": {
                "description": "Fetches all available users from DB",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Err"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Err"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Err"
                        }
                    }
                }
            },
            "post": {
                "description": "Create/Add new user to DB via POST request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create new user",
                "parameters": [
                    {
                        "description": "Specification for user which should be added",
                        "name": "users",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Err"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Err"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Err"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Err": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object"
                },
                "severity": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "firstname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}